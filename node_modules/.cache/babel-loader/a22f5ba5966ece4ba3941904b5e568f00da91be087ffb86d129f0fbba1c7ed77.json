{"ast":null,"code":"import axios from 'axios';\nexport const validateGameName = (form, error, setError) => {\n  if (!form.name) {\n    setError({\n      ...error,\n      name: 'Name required'\n    });\n  } else {\n    if (form.name.length >= 30) {\n      setError({\n        ...error,\n        name: 'Max characters: 30'\n      });\n    } else {\n      setError({\n        ...error,\n        name: ''\n      });\n    }\n  }\n};\nexport const validateDescription = (form, error, setError) => {\n  if (!form.description) {\n    setError({\n      ...error,\n      description: 'Description required'\n    });\n  } else {\n    if (form.description.length > 300) setError({\n      ...error,\n      description: \"Max chars in description: 300\"\n    });else {\n      if (form.description.length < 30) setError({\n        ...error,\n        description: \"Min chars in description: 30\"\n      });else {\n        setError({\n          ...error,\n          description: ''\n        });\n      }\n    }\n  }\n};\nexport const validateRelease = (form, error, setError) => {\n  if (!form.released) {\n    setError({\n      ...error,\n      released: 'Select a release date'\n    });\n  } else {\n    setError({\n      ...error,\n      released: ''\n    });\n  }\n};\nexport const validatePlayTime = (form, error, setError) => {\n  if (!form.playtime) {\n    setError({\n      ...error,\n      playtime: 'Hours of gameplay are required'\n    });\n  } else {\n    setError({\n      ...error,\n      playtime: ''\n    });\n  }\n};\nexport const validateImage = (form, error, setError) => {\n  const urlPattern = new RegExp(/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi);\n  if (!form.background_image) {\n    setError({\n      ...error,\n      background_image: 'Image is required'\n    });\n  } else {\n    if (!urlPattern.test(form.background_image)) setError({\n      ...error,\n      background_image: 'Inser a valid URL'\n    });else setError({\n      ...error,\n      background_image: ''\n    });\n  }\n};\nexport const validateStores = (form, error, setError) => {\n  if (!form.platforms) {\n    setError({\n      ...error,\n      platforms: 'Include at least one'\n    });\n  } else {\n    if (form.platforms.includes(\",\") || form.platforms.includes('.')) {\n      setError({\n        ...error,\n        platforms: 'Dont use commas or dots '\n      });\n    } else {\n      setError({\n        ...error,\n        platforms: ''\n      });\n    }\n  }\n};\nexport const validateDevs = (form, error, setError) => {\n  if (!form.developer) {\n    setError({\n      ...error,\n      developer: 'Someone made te game!'\n    });\n  } else {\n    setError({\n      ...error,\n      developer: ''\n    });\n  }\n};\nexport const validateGenres = (form, error, setError) => {\n  if (!form.genres.length) {\n    setError({\n      ...error,\n      genres: 'Select at leat one'\n    });\n  } else {\n    setError({\n      ...error,\n      genres: ''\n    });\n  }\n};\nexport const validateTags = (form, error, setError) => {\n  if (!form.tags) {\n    setError({\n      ...error,\n      tags: 'No tags?'\n    });\n  } else {\n    if (form.tags.includes(\",\") || form.tags.includes('.')) {\n      setError({\n        ...error,\n        tags: 'Dont use commas or dots'\n      });\n    } else {\n      setError({\n        ...error,\n        tags: ''\n      });\n    }\n  }\n};\nexport const sendPost = async (form, func, param) => {\n  const response = await axios.post('http://localhost:3001/videogames', form);\n  await func(param());\n  return response;\n};","map":{"version":3,"names":["axios","validateGameName","form","error","setError","name","length","validateDescription","description","validateRelease","released","validatePlayTime","playtime","validateImage","urlPattern","RegExp","background_image","test","validateStores","platforms","includes","validateDevs","developer","validateGenres","genres","validateTags","tags","sendPost","func","param","response","post"],"sources":["E:/Henry/PI-Videogames-main/client/src/Components/PostFormComponents/Functions.jsx"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\nexport const validateGameName = (form,error,setError) => {\r\n    if(!form.name) {setError({...error, name: 'Name required'})}\r\n    else {\r\n        if(form.name.length >= 30) {setError({...error, name: 'Max characters: 30'})}\r\n        else {\r\n            setError({...error, name: ''})\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const validateDescription =  (form,error,setError) => {\r\n    if(!form.description) {setError({...error, description: 'Description required'})}\r\n    else {\r\n        if(form.description.length > 300) setError({...error, description: \"Max chars in description: 300\"})\r\n        else {\r\n            if(form.description.length < 30) setError({...error, description: \"Min chars in description: 30\"})\r\n            else {\r\n                setError({...error, description: ''})\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const validateRelease = (form, error, setError) => {\r\n    if(!form.released) {\r\n        setError({...error, released: 'Select a release date'})\r\n    } else {\r\n        setError({...error, released: ''})\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const validatePlayTime = (form, error, setError) => {\r\n    if(!form.playtime){\r\n        setError({...error, playtime: 'Hours of gameplay are required'})\r\n    } else {\r\n        setError({...error, playtime: ''})\r\n    }\r\n}\r\n\r\n\r\nexport const validateImage =(form, error, setError) => {\r\n    const urlPattern = new RegExp(/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi);\r\n    if(!form.background_image){\r\n        setError({...error, background_image: 'Image is required'})\r\n    } else {\r\n        if(!urlPattern.test(form.background_image)) setError({...error, background_image: 'Inser a valid URL'})\r\n        else  setError({...error, background_image: ''})\r\n    }\r\n}\r\n\r\nexport const validateStores = (form, error, setError) => {\r\n    if(!form.platforms){ setError({...error, platforms: 'Include at least one'})}\r\n    else{\r\n        if(form.platforms.includes(\",\") || form.platforms.includes('.')){\r\n            setError({...error, platforms: 'Dont use commas or dots '})\r\n        }else {\r\n            setError({...error, platforms: ''})\r\n        }\r\n    }\r\n}\r\n\r\nexport const validateDevs = (form, error, setError) => {\r\n    if(!form.developer){setError({...error, developer: 'Someone made te game!'})}\r\n    else{\r\n         setError({...error, developer: ''})\r\n    }\r\n}\r\n\r\nexport const validateGenres = (form, error, setError) => {\r\n    if(!form.genres.length){ setError({...error, genres: 'Select at leat one'})}\r\n    else{\r\n         setError({...error, genres: ''})\r\n    }\r\n}\r\n\r\n\r\nexport const validateTags = (form, error, setError) => {\r\n    if(!form.tags){ setError({...error, tags: 'No tags?'})}\r\n    else{\r\n        if(form.tags.includes(\",\") || form.tags.includes('.')){\r\n            setError({...error, tags: 'Dont use commas or dots'})\r\n        }else {\r\n\r\n            setError({...error, tags: ''})\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const sendPost =  async (form, func, param) => {\r\n   \r\n    const response = await axios.post('http://localhost:3001/videogames', form)\r\n    await func(param())\r\n    \r\n    return response\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}