{"ast":null,"code":"import axios from \"axios\";\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const GET_INFO = 'GET_INFO';\nexport const GET_GENRES = 'GET_GENRES';\nexport const ADD_FILTER = 'ADD_FILTER';\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport const ADD_FILTERED_GAME = 'ADD_FILTERED_GAME';\nexport const REMOVE_FILTERED_GAME = 'REMOVE_FILTERED_GAME';\nexport const SORT_A_TO_Z = 'SORT_A_TO_Z';\nexport const SORT_Z_TO_A = 'SORT_Z_TO_A';\nexport const SORT_BY_RATING = 'SORT_BY_RATING';\nexport const GET_BY_ID = 'GET_BY_ID';\nexport const GET_SEARCH_RESULTS = 'GET_SEARCH_RESULTS';\nexport const GET_MY_GAMES = 'GET_MY_GAMES';\nexport const GET_SERVER_ERROR = 'GET_SERVER_ERROR';\nexport const REMOVE_SERVER_ERROR = 'REMOVE_SERVER_ERROR';\nexport const getError = error => {\n  return {\n    type: 'GET_SERVER_ERROR',\n    payload: error\n  };\n};\nexport const removeError = () => {\n  return {\n    type: 'REMOVE_SERVER_ERROR',\n    payload: ''\n  };\n};\nexport const getInfo = () => {\n  return dispatch => {\n    axios.get('http://localhost:3001/videogames').then(response => {\n      dispatch({\n        type: 'GET_INFO',\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getMyGames = () => {\n  return dispatch => {\n    axios.get('http://localhost:3001/videogames').then(response => {\n      const filterResponse = response.data.filter(games => games.id.length === 36);\n      return filterResponse;\n    }).then(response => {\n      dispatch({\n        type: 'GET_MY_GAMES',\n        payload: response\n      });\n    });\n  };\n};\nexport const sortByRating = () => {\n  return {\n    type: 'SORT_BY_RATING',\n    payload: function sortBy(toOrder) {\n      toOrder.sort((a, b) => {\n        if (a.rating < b.rating) return 1;\n        if (a.rating > b.rating) return -1;\n        if (a.rating === b.rating) return 0;\n      });\n      return toOrder;\n    }\n  };\n};\nexport const addFilteredGames = game => {\n  return {\n    type: 'ADD_FILTERED_GAME',\n    payload: game\n  };\n};\nexport const removeFilteredGames = genre => {\n  return {\n    type: 'REMOVE_FILTERED_GAME',\n    payload: genre\n  };\n};\nexport const getGenres = () => {\n  return dispatch => {\n    axios.get('http://localhost:3001/genres').then(response => {\n      console.log(response.data);\n      dispatch({\n        type: 'GET_GENRES',\n        payload: response.data\n      });\n    });\n  };\n};\nexport const searchResults = name => {\n  return dispatch => {\n    axios.get(`http://localhost:3001/videogames/game?name=${name}`).then(response => {\n      console.log(name);\n      dispatch({\n        type: 'GET_SEARCH_RESULTS',\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getGameById = id => {\n  return dispatch => {\n    axios.get(`http://localhost:3001/videogames/${id}`).then(response => {\n      dispatch({\n        type: 'GET_BY_ID',\n        payload: response.data\n      });\n    });\n  };\n};\nexport const sortAtoZ = () => {\n  return {\n    type: 'SORT_A_TO_Z',\n    payload: function sortBy(toOrder) {\n      toOrder.sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        if (a.name === b.name) return 0;\n      });\n      return toOrder;\n    }\n  };\n};\nexport const sortZtoA = () => {\n  return {\n    type: 'SORT_Z_TO_A',\n    payload: function sortBy(toOrder) {\n      toOrder.sort((a, b) => {\n        if (a.name < b.name) return 1;\n        if (a.name > b.name) return -1;\n        if (a.name === b.name) return 0;\n      });\n      return toOrder;\n    }\n  };\n};\nexport const addFilter = genre => {\n  return {\n    type: 'ADD_FILTER',\n    payload: genre\n  };\n};\nexport const removeFilter = genre => {\n  return {\n    type: 'REMOVE_FILTER',\n    payload: genre\n  };\n};\nexport const addFavorite = character => {\n  return {\n    type: 'ADD_FAVORITE',\n    payload: character\n  };\n};\nexport const removeFavorite = id => {\n  return {\n    type: 'REMOVE_FAVORITE',\n    payload: id\n  };\n};","map":{"version":3,"names":["axios","ADD_FAVORITE","REMOVE_FAVORITE","GET_INFO","GET_GENRES","ADD_FILTER","REMOVE_FILTER","ADD_FILTERED_GAME","REMOVE_FILTERED_GAME","SORT_A_TO_Z","SORT_Z_TO_A","SORT_BY_RATING","GET_BY_ID","GET_SEARCH_RESULTS","GET_MY_GAMES","GET_SERVER_ERROR","REMOVE_SERVER_ERROR","getError","error","type","payload","removeError","getInfo","dispatch","get","then","response","data","getMyGames","filterResponse","filter","games","id","length","sortByRating","sortBy","toOrder","sort","a","b","rating","addFilteredGames","game","removeFilteredGames","genre","getGenres","console","log","searchResults","name","getGameById","sortAtoZ","sortZtoA","addFilter","removeFilter","addFavorite","character","removeFavorite"],"sources":["E:/Henry/PI-Videogames-main/client/src/Redux/Actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\r\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE'\r\nexport const GET_INFO = 'GET_INFO'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const ADD_FILTER = 'ADD_FILTER'\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER'\r\nexport const ADD_FILTERED_GAME= 'ADD_FILTERED_GAME'\r\nexport const REMOVE_FILTERED_GAME= 'REMOVE_FILTERED_GAME'\r\nexport const SORT_A_TO_Z='SORT_A_TO_Z'\r\nexport const SORT_Z_TO_A='SORT_Z_TO_A'\r\nexport const SORT_BY_RATING='SORT_BY_RATING'\r\nexport const GET_BY_ID='GET_BY_ID'\r\nexport const GET_SEARCH_RESULTS='GET_SEARCH_RESULTS'\r\nexport const GET_MY_GAMES = 'GET_MY_GAMES'\r\nexport const GET_SERVER_ERROR = 'GET_SERVER_ERROR'\r\nexport const REMOVE_SERVER_ERROR = 'REMOVE_SERVER_ERROR'\r\n\r\n\r\nexport const getError = (error) => {\r\n    return{\r\n        type: 'GET_SERVER_ERROR',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return{\r\n        type: 'REMOVE_SERVER_ERROR',\r\n        payload: ''\r\n    }\r\n}\r\n \r\nexport const getInfo =  () => {\r\n   return dispatch => {\r\n        axios.get('http://localhost:3001/videogames')\r\n        .then(response =>\r\n            {   \r\n                dispatch({\r\n                type: 'GET_INFO',\r\n                payload: response.data\r\n            })}\r\n        )\r\n   }\r\n   \r\n}\r\n\r\nexport const getMyGames =  () => {\r\n    return dispatch => {\r\n         axios.get('http://localhost:3001/videogames')\r\n         .then(response =>{\r\n             const filterResponse = response.data.filter(games => games.id.length=== 36)\r\n             return  filterResponse}\r\n         )\r\n         .then(response => \r\n            { \r\n                \r\n                dispatch({\r\n                type: 'GET_MY_GAMES',\r\n                payload: response\r\n            })}\r\n         )\r\n    }\r\n    \r\n }\r\n\r\n\r\n\r\n\r\nexport const sortByRating = () => {\r\n    return{\r\n        type: 'SORT_BY_RATING',\r\n        payload: function sortBy(toOrder){\r\n                toOrder.sort((a,b) => {\r\n                if(a.rating < b.rating)return 1\r\n                if(a.rating > b.rating) return -1\r\n                if(a.rating === b.rating) return 0\r\n            })\r\n            return toOrder\r\n        }\r\n       }\r\n}\r\n\r\nexport const addFilteredGames = (game) => {\r\n    return{\r\n        type: 'ADD_FILTERED_GAME',\r\n        payload: game\r\n    }\r\n}\r\n\r\nexport const removeFilteredGames = (genre) => {\r\n    return{\r\n        type: 'REMOVE_FILTERED_GAME',\r\n        payload: genre\r\n    }\r\n}\r\n\r\nexport const getGenres = () => {\r\n    return dispatch => {\r\n        axios.get('http://localhost:3001/genres')\r\n        .then(response =>\r\n            {   \r\n                console.log(response.data)\r\n                dispatch({\r\n                type: 'GET_GENRES',\r\n                payload: response.data\r\n            })}\r\n        )\r\n   }\r\n}\r\n\r\nexport const searchResults = (name) => {\r\n    return dispatch => {\r\n        axios.get(`http://localhost:3001/videogames/game?name=${name}`)\r\n        .then(response =>\r\n            {   \r\n                console.log(name)\r\n                dispatch({\r\n                type: 'GET_SEARCH_RESULTS',\r\n                payload: response.data\r\n            })}\r\n        )\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getGameById =(id) => {\r\n    return dispatch => {\r\n        axios.get(`http://localhost:3001/videogames/${id}`)\r\n        .then(response =>\r\n            {   dispatch({\r\n                type: 'GET_BY_ID',\r\n                payload: response.data\r\n            })}\r\n        )\r\n   }\r\n}\r\n\r\nexport const sortAtoZ = () => {\r\n   return{\r\n    type: 'SORT_A_TO_Z',\r\n    payload: function sortBy(toOrder){\r\n            toOrder.sort((a,b) => {\r\n            if(a.name > b.name)return 1\r\n            if(a.name < b.name) return -1\r\n            if(a.name === b.name) return 0\r\n        })\r\n        return toOrder\r\n    }\r\n   }\r\n}\r\n\r\nexport const sortZtoA = () => {\r\n    return{\r\n        type: 'SORT_Z_TO_A',\r\n        payload: function sortBy(toOrder){\r\n                toOrder.sort((a,b) => {\r\n                if(a.name < b.name)return 1\r\n                if(a.name > b.name) return -1\r\n                if(a.name === b.name) return 0\r\n            })\r\n            return toOrder\r\n        }\r\n       }\r\n}\r\n\r\nexport const addFilter = (genre) => {\r\n    return{\r\n        type: 'ADD_FILTER',\r\n        payload: genre\r\n    }\r\n}\r\n\r\nexport const removeFilter = (genre) => {\r\n    return{\r\n        type: 'REMOVE_FILTER',\r\n        payload: genre\r\n    }\r\n}\r\n\r\n\r\nexport const addFavorite = (character) =>{\r\n    return{\r\n        type: 'ADD_FAVORITE',\r\n        payload: character\r\n    }\r\n}\r\n\r\nexport const removeFavorite = (id) => {\r\n    return{\r\n        type: 'REMOVE_FAVORITE',\r\n        payload: id\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}