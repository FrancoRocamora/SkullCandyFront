{"ast":null,"code":"var _jsxFileName = \"E:\\\\Henry\\\\PI-Videogames-main\\\\client\\\\src\\\\Components\\\\HomeComponents\\\\FilterBar.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from './FilterBar.module.css';\nimport { addFilter, removeFilter, removeFilteredGames } from \"../../Redux/Actions\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Action from '../../Images/ActionIcon.png';\nimport Adventure from '../../Images/AdventureIcon.png';\nimport Arcade from '../../Images/ArcadeIcon.png';\nimport Board from '../../Images/BoardIcon.png';\nimport Card from '../../Images/CardGamesIcon.png';\nimport Casual from '../../Images/CasualIcon.png';\nimport Education from '../../Images/EducationIcon.png';\nimport Family from '../../Images/FamilyIcon.png';\nimport Fight from '../../Images/FightingIcon.png';\nimport Indie from '../../Images/IndieIcon.png';\nimport Multiplayer from '../../Images/MultiplayerIcon.png';\nimport Plataformer from '../../Images/PlatafromerIcon.png';\nimport Puzzle from '../../Images/PuzzleIcon.png';\nimport Racing from '../../Images/RacingIcon.png';\nimport Rpg from '../../Images/RpgIcon.png';\nimport Shooter from '../../Images/ShooterIcon.png';\nimport Simulation from '../../Images/SimulationIcon.png';\nimport Sports from '../../Images/SportsIcon.png';\nimport Strategy from '../../Images/StrategyIcon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterBar() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const activeFilter = useSelector(initialState => initialState.activeFilter);\n  const filterBy = genre => {\n    if (activeFilter.includes(genre)) {\n      dispatch(removeFilteredGames(genre));\n      dispatch(removeFilter(genre));\n    } else {\n      dispatch(addFilter(genre));\n      navigate('/filterBy');\n    }\n  };\n  const arrayOfIcons = [Action, Adventure, Arcade, Board, Card, Casual, Education, Family, Fight, Indie, Multiplayer, Plataformer, Puzzle, Racing, Rpg, Shooter, Simulation, Sports, Strategy];\n  const genres = useSelector(initialState => initialState.gamesGenres);\n  genres[0].sort();\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.genresBar,\n    children: genres[0].map(genre => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ClassName: styles.li,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: activeFilter.includes(genre) ? styles.active : styles.unActive,\n          onClick: () => filterBy(genre),\n          children: [genre, /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.icon,\n            src: `${arrayOfIcons}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n_s(FilterBar, \"8WlYs5f2kOpU+BulSwoFC6KAmmw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = FilterBar;\nexport default FilterBar;\nvar _c;\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["useSelector","useDispatch","styles","addFilter","removeFilter","removeFilteredGames","useEffect","useState","useNavigate","Action","Adventure","Arcade","Board","Card","Casual","Education","Family","Fight","Indie","Multiplayer","Plataformer","Puzzle","Racing","Rpg","Shooter","Simulation","Sports","Strategy","jsxDEV","_jsxDEV","FilterBar","_s","dispatch","navigate","activeFilter","initialState","filterBy","genre","includes","arrayOfIcons","genres","gamesGenres","sort","className","genresBar","children","map","ClassName","li","active","unActive","onClick","icon","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Henry/PI-Videogames-main/client/src/Components/HomeComponents/FilterBar.jsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\r\nimport styles from './FilterBar.module.css'\r\nimport { addFilter, removeFilter, removeFilteredGames } from \"../../Redux/Actions\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Action from '../../Images/ActionIcon.png'\r\nimport Adventure from '../../Images/AdventureIcon.png'\r\nimport Arcade from '../../Images/ArcadeIcon.png'\r\nimport Board from '../../Images/BoardIcon.png'\r\nimport Card from '../../Images/CardGamesIcon.png'\r\nimport Casual from '../../Images/CasualIcon.png'\r\nimport Education from '../../Images/EducationIcon.png'\r\nimport Family from '../../Images/FamilyIcon.png'\r\nimport Fight from '../../Images/FightingIcon.png'\r\nimport Indie from '../../Images/IndieIcon.png'\r\nimport Multiplayer from '../../Images/MultiplayerIcon.png'\r\nimport Plataformer from '../../Images/PlatafromerIcon.png'\r\nimport Puzzle from '../../Images/PuzzleIcon.png'\r\nimport Racing from '../../Images/RacingIcon.png'\r\nimport Rpg from '../../Images/RpgIcon.png'\r\nimport Shooter from '../../Images/ShooterIcon.png'\r\nimport Simulation from '../../Images/SimulationIcon.png'\r\nimport Sports from '../../Images/SportsIcon.png'\r\nimport Strategy from '../../Images/StrategyIcon.png'\r\nfunction FilterBar(){\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const activeFilter = useSelector(initialState => initialState.activeFilter)\r\n    const filterBy = (genre) => {\r\n        if(activeFilter.includes(genre)){\r\n            dispatch(removeFilteredGames(genre))\r\n            dispatch(removeFilter(genre))\r\n            }\r\n        else {\r\n            dispatch(addFilter(genre))\r\n            navigate('/filterBy')\r\n        }\r\n    }\r\n    const arrayOfIcons = [Action, Adventure, Arcade,\r\n        Board, Card, Casual, Education, Family, Fight, Indie, Multiplayer, Plataformer,\r\n        Puzzle, Racing, Rpg, Shooter, Simulation, Sports, Strategy]\r\n  \r\n    const genres = useSelector(initialState => initialState.gamesGenres)\r\n    genres[0].sort()\r\n    return(\r\n        \r\n            <ul className={styles.genresBar}>\r\n            {genres[0].map((genre) =>{\r\n            return (\r\n                    <li key={genre} ClassName={styles.li}>\r\n                    <a className={(activeFilter.includes(genre)) ? styles.active : styles.unActive} onClick={() => filterBy(genre)}>{genre}\r\n                    <img className={styles.icon}src={`${arrayOfIcons}`}/>\r\n                    </a>\r\n                </li>)\r\n    }) }\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default FilterBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}